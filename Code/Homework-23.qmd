---
title: "Homework 23"
format: html
editor: visual
---

## Set up

```{r}
rm(list = ls())
library(tidyverse)
library(here)
```

Load in the data and take a look:

```{r}
plant_gr <- read.csv(here("Data", "plant.growth.rate.csv"))
glimpse(plant_gr)
```

This homework is for sections 5.4-5.5 of GSWR book.

## 5.4 "Introducing ... linear models"

General linear models (NOT GLMs): regression, multiple regression, ANOVA, and ANCOVA (fundamentally linear models.)

Estimation: least squares

Assumptions: residuals are normally distributed

Most important function: lm()

## 5.5 "Simple linear regression"

Question: do plant growth rates vary with soil moisture?

Expectation: plants will grow faster with more moisture.

Key rationale for using a lm in this case: Continuous response variable.

5.5.1 Plotting:

I already looked at the data but here it is again:

```{r}
head(plant_gr)
```

Scatterplot:

```{r}
ggplot(plant_gr, aes(x = soil.moisture.content, y = plant.growth.rate))+
  geom_point()+
  ylab("Plant Growth Rate (mm/week)")+
  theme_bw()
```

5.5.2 Interpretation:

Positive relationship shown: as moisture increases, plant gr increases. Can try to roughly guess the intercept and slope just from the graph. The book says the equation is roughly: $\widehat{Plant Growth Rate} = 15 * Soil Moisture + 17.5$.

d.f. : \# of points - \# of parameters

5.5.3 Using lm():

```{r}
model_pgr <- lm(plant.growth.rate~soil.moisture.content, data = plant_gr)
```

5.5.4 Assumptions:

ggplot doesn't recognize lms so it needs ggfortify: autoplot() takes lms and plots them (includes plots that can be made from plot() in base R)

Producing a plot:

```{r}
library(ggfortify) # package is installed and should now be added to my normal 'set up' section of code.
autoplot(model_pgr, smooth.colour = NA)
```

What do the plots mean?

Top Left: about the 'systematic part' of the model. Any curvature to the data means the structure of the model is wrong.

Top right: Evaluates the assumption of normal residuals. Especially useful with small sample sizes. Want to see the points as close to the normal quantile line as possible.

Bottom left: Evaluates equal variance assumption. Y-axis: is a standardized indicator of variation. The points should be random/no pattern.

Bottom right: Evaluates each points leverage: used to identify outliers and points that have high influence on slope of the model.

smooth.colour = NA omits a "wiggly line" that is distracting.

5.5.5 Interpretation:

Tools to use: anova() and summary()

anova() does not compute the type of ANOVA that compares means, instead it produces the sums of squares table as well as the F-value, $R^2$ and adjusted $R^2$.

anova table:

```{r}
anova(model_pgr)
```

We see a very small p-value (significance)

```{r}
summary(model_pgr)
```

Again a significant p-value both from t-test for individual coefficients and the overall F stat.

5.5.6 Back to the plot:

Bring back the model to plot of the raw data:

adding regression lines in ggplot:

```{r}
ggplot(plant_gr,aes(x = soil.moisture.content, y = plant.growth.rate))+
  geom_point()+
  geom_smooth(method = "lm")+
  ylab("Plant Growth Rate (mm/week)")+
  theme_bw()
```

New feature: `geom_smooth(method = "lm")` -\> plots a linear regression line with the standard error of the fit in transparent gray.

This doesn't work with more complicated models.
